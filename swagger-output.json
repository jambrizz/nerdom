{
  "swagger": "2.0",
  "info": {
    "title": "Nerdom",
    "description": "An app for nerds",
    "version": "1.0.0"
  },
  "host": "",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/games/": {
      "get": {
        "description": "Get all games",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Post one game to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "developers": {
                  "example": "any"
                },
                "publishers": {
                  "example": "any"
                },
                "creators": {
                  "example": "any"
                },
                "platforms": {
                  "example": "any"
                },
                "prominent_chars": {
                  "example": "any"
                },
                "actors": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/games/{id}": {
      "get": {
        "description": "Get one game based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Update one game in the database using the ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "developers": {
                  "example": "any"
                },
                "publishers": {
                  "example": "any"
                },
                "creators": {
                  "example": "any"
                },
                "platforms": {
                  "example": "any"
                },
                "prominent_chars": {
                  "example": "any"
                },
                "actors": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "Delete one game from the database using the ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/games/{title}": {
      "get": {
        "description": "Get one game based on title",
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/games/{genre}": {
      "get": {
        "description": "Get one game based on title",
        "parameters": [
          {
            "name": "genre",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/movies/": {
      "get": {
        "description": "Get all movies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Post one movie to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "director": {
                  "example": "any"
                },
                "writers": {
                  "example": "any"
                },
                "producers": {
                  "example": "any"
                },
                "production_companies": {
                  "example": "any"
                },
                "release_date": {
                  "example": "any"
                },
                "actors": {
                  "example": "any"
                },
                "prominent_chars": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "distribution": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "description": "Get one movie based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "description": "Update a movie based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "director": {
                  "example": "any"
                },
                "writers": {
                  "example": "any"
                },
                "producers": {
                  "example": "any"
                },
                "production_companies": {
                  "example": "any"
                },
                "release_date": {
                  "example": "any"
                },
                "actors": {
                  "example": "any"
                },
                "prominent_chars": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "distribution": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "Delete a movie based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "description": "Get all reviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Post one review to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "media": {
                  "example": "any"
                },
                "review": {
                  "example": "any"
                },
                "media_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reviews/{id}": {
      "put": {
        "description": "Update a review based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                },
                "media": {
                  "example": "any"
                },
                "review": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "Delete a review based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authorization/login": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/authorization/callback": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/shows/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/shows/{id}": {
      "put": {
        "description": "Update one show based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "genres": {
                  "example": "any"
                },
                "creators": {
                  "example": "any"
                },
                "producers": {
                  "example": "any"
                },
                "production_companies": {
                  "example": "any"
                },
                "distributor": {
                  "example": "any"
                },
                "release_date": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "prominent_chars": {
                  "example": "any"
                },
                "actors": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "Delete one show based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "Post one review to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "reviews": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "description": "Update one user based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "Delete one user based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}